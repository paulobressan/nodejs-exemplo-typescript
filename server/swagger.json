{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "API - Quake 3 Arena",
        "description": "Quake 3 Arena logs the Game",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:4000",
    "basePath": "/",
    "tags": [
        {
            "name": "Games",
            "description": "API for get and save logs the game"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/games": {
            "post": {
                "tags": [
                    "Games"
                ],
                "description": "Create new game in system",
                "parameters": [
                    {
                        "name": "game",
                        "in": "body",
                        "description": "Game that we want to create",
                        "schema": {
                            "$ref": "#/definitions/Game"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "page":"page",
                        "in":"query",
                        "description": "Game that we want to create",
                        "type":"number"
                    }
                ],
                "summary": "Get all games in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Games"
                        }
                    }
                }
            }
        },
        "/games?page={page}" : {
            "parameters": [
                {
                    "page":"game",
                    "in":"path",
                    "description": "Game that we want to create",
                    "type":"number"
                }
            ],
            "get":{
                "tages":[
                    "Games"
                ],
                "summary": "Get games for page",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/Games"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user with given ID",
                "responses": {
                    "200": {
                        "description": "User is found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user with given ID",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User is deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user with give ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Game": {
            "required": [
                "TotalKills",
                "Players",
                "Kills"
            ],
            "properties": {
                "_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "TotalKills": {
                    "type": "number"
                },
                "Players": {
                    "type": "string[]"
                },
                "Kills": {
                    "type": "Kill[]"
                }
            }
        },
        "Games": {
            "type": "array",
            "$ref": "#/definitions/Game"
        }
    }
}